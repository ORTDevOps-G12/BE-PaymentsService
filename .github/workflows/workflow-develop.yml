name: CI/CD Pipeline - Develop

on:
  push:
    branches:
      - develop
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  job-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "adopt"
          java-version: "17"

      - name: Grant execute permission for Maven Wrapper
        run: chmod +x ./mvnw

      - name: Install dependencies
        run: ./mvnw dependency:resolve

      - name: Build with Maven
        run: ./mvnw clean package

      - name: Verify JAR
        run: |
          echo "Verifying JAR in build job..."
          file target/payments-service-example-0.0.1-SNAPSHOT.jar
          unzip -p target/payments-service-example-0.0.1-SNAPSHOT.jar META-INF/MANIFEST.MF

      - name: Upload JAR as artifact
        uses: actions/upload-artifact@v2
        with:
          name: payments-service-example-jar
          path: target/payments-service-example-0.0.1-SNAPSHOT.jar

  job-sonar:
    name: Analyze
    runs-on: ubuntu-latest
    needs: job-build
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: "zulu" # Alternative distribution options are available.
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=ORTDevOps-G12_BE-PaymentsService

  job-docker-build:
    runs-on: ubuntu-latest
    needs: job-build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download JAR artifact
        uses: actions/download-artifact@v2
        with:
          name: payments-service-example-jar
          path: ./

      - name: Verify JAR detailed
        run: |
          echo "Detailed verification of JAR in docker-build job..."
          file payments-service-example-0.0.1-SNAPSHOT.jar
          jar tf payments-service-example-0.0.1-SNAPSHOT.jar
          unzip -p payments-service-example-0.0.1-SNAPSHOT.jar META-INF/MANIFEST.MF

      - name: Build Docker image
        run: |
          docker build --build-arg JAR_FILE=payments-service-example-0.0.1-SNAPSHOT.jar -t ${{ secrets.DOCKER_USERNAME }}/payments-service-example:dev1 .

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/payments-service-example:dev1

  job-newman:
    runs-on: ubuntu-latest
    needs: job-build
    steps:
      - uses: actions/checkout@master
      - name: Create dir
        run: |
          mkdir -p results

      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: "16.x"

      - name: Install Newman
        run: |
          npm install -g newman

      - name: "Install newman reporter"
        run: |
          npm install -g newman-reporter-htmlextra

      - name: Run test
        id: run-newman
        run: |
          newman run "ObligatorioDevOps-G12.json"
